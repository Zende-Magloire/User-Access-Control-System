For alice:

CREATE (:User {name: 'alice'})
CREATE (:Role {name: 'Admin'})
CREATE (:Policy {name: 'Policy1'})
CREATE (:Permission {name: 'read'})
CREATE (:Resource {name: 'file.txt', type: 'protected file'})


MATCH (user:User {name: 'alice'})
MATCH (role:Role {name: 'Admin'})
MERGE (user)-[:HAS_ROLE]->(role)

WITH role
MATCH (policy:Policy {name: 'Policy1'})
MERGE (role)-[:HAS_POLICY]->(policy)

WITH policy
MATCH (permission:Permission {name: 'read'})
MERGE (policy)-[:HAS_PERMISSION]->(permission)

WITH permission
MATCH (resource:Resource {name: 'file.txt', type: 'protected file'})
MERGE (permission)-[:HAS_RESOURCE]->(resource)


Adding others:
//users
CREATE (:User {name: 'susan'})
CREATE (:User {name: 'josh'})
CREATE (:User {name: 'dan'})
CREATE (:User {name: 'aj'})
CREATE (:User {name: 'tim'})
CREATE (:User {name: 'zende'})
CREATE (:User {name: 'vakul'})

CREATE (:User {name: 'roellke'})

//roles
CREATE (:Role {name: 'admin'})
CREATE (:Role {name: 'professor'})
CREATE (:Role {name: 'student'})

CREATE (:Role {name: 'auditor'})
CREATE (:Role {name: 'employee'})

CREATE (:Role {name: 'student_employee'})
CREATE (:Role {name: 'dean'})

//permissions
CREATE (:Permission {name: 'delete'})
CREATE (:Permission {name: 'create'})
CREATE (:Permission {name: 'write'})
CREATE (:Permission {name: 'read'})

//Policies
CREATE (:Policy {name: 'Policy2'})
CREATE (:Policy {name: 'Policy3'})
CREATE (:Policy {name: 'Policy4'})
CREATE (:Policy {name: 'Policy5'})

//resources
CREATE (:Resource {name: 'my_grades.txt', type: 'restricted'})
CREATE (:Resource {name: 'student_grades.txt', type: 'protected'})
CREATE (:Resource {name: 'my_submissions.txt', type: 'restricted'})
CREATE (:Resource {name: 'student_submissions.txt', type: 'protected'})
CREATE (:Resource {name: 'assignments.pdf', type: 'access_controlled'})
CREATE (:Resource {name: 'confidential_report.pdf', type: 'protected'})
CREATE (:Resource {name: 'meeting_minutes.doc', type: 'protected'})
CREATE (:Resource {name: 'my_payroll.xls', type: 'protected'})
CREATE (:Resource {name: 'payroll.xls', type: 'protected'})

//user match to role
MATCH (user:User {name: 'susan'})
MATCH (role:Role {name: 'admin', 'professor'})
MERGE (user)-[:HAS_ROLE]->(role)

WITH 1 as _
MATCH (user:User {name: 'josh'})
MATCH (role:Role {name: 'professor'})
MERGE (user)-[:HAS_ROLE]->(role)

WITH 1 as _
MATCH (user:User {name: 'dan'})
MATCH (role:Role {name: 'admin', 'professor'})
MERGE (user)-[:HAS_ROLE]->(role)

WITH 1 as _
MATCH (user:User {name: 'aj'})
MATCH (role:Role {name: 'professor'})
MERGE (user)-[:HAS_ROLE]->(role)

WITH 1 as _
MATCH (user:User {name: 'tim'})
MATCH (role:Role {name: ''student_employee''})
MERGE (user)-[:HAS_ROLE]->(role)

WITH 1 as _
MATCH (user:User {name: 'zende'})
MATCH (role:Role {name: ''student_employee''})
MERGE (user)-[:HAS_ROLE]->(role)

WITH 1 as _
MATCH (user:User {name: 'vakul'})
MATCH (role:Role {name: ''student_employee''})
MERGE (user)-[:HAS_ROLE]->(role)


MATCH (role:Role {name: 'student'})
MERGE (:User {name: 'matthew'})-[:HAS_ROLE]->(role)
MERGE (:User {name: 'jonah'})-[:HAS_ROLE]->(role)
MERGE (:User {name: 'orian'})-[:HAS_ROLE]->(role)
MERGE (:User {name: 'asia'})-[:HAS_ROLE]->(role)


MATCH (role:Role {name: 'manager'})
MERGE (:User {name: 'wendi'})-[:HAS_ROLE]->(role)

MATCH (role:Role {name: 'dean'})
MERGE (:User {name: 'george'})-[:HAS_ROLE]->(role)

//role match to policy
-admin
MATCH (user:User)-[:HAS_ROLE]->(role:Role {name: 'admin'})
MATCH (policy:Policy {name: 'Policy1'})
MERGE (role)-[:HAS_POLICY]->(policy)


-professor
MATCH (user:User)-[:HAS_ROLE]->(role:Role {name: 'professor'})
MATCH (policy:Policy {name: 'Policy2'})
MERGE (role)-[:HAS_POLICY]->(policy)

-student
MATCH (user:User)-[:HAS_ROLE]->(role:Role {name: 'student'})
MATCH (policy:Policy {name: 'Policy3'})
MERGE (role)-[:HAS_POLICY]->(policy)



//policy match to permission and resource for admin
MATCH (policy:Policy {name: 'Policy1'})
MATCH (resource:Resource {name: 'confidential_report.pdf', type: 'protected'})
MERGE (policy)-[:CAN_READ]->(resource)

WITH policy
MATCH (resource:Resource {name: 'meeting_minutes.doc', type: 'protected'})
MERGE (policy)-[:CAN_READ]->(resource)
MERGE (policy)-[:CAN_WRITE]->(resource)


//policy match to permission and resource for faculty
MATCH (policy:Policy {name: 'Policy2'})
MATCH (resource1:Resource {name: 'assignments.pdf', type: 'access_controlled'})
MERGE (policy)-[:CAN_READ]->(resource1)
MERGE (policy)-[:CAN_WRITE]->(resource1)
MERGE (policy)-[:CAN_CREATE]->(resource1)
MERGE (policy)-[:CAN_DELETE]->(resource1)

MATCH (policy:Policy {name: 'Policy2'})
MATCH (resource2:Resource {name: 'student_grades.txt', type: 'protected'})
MERGE (policy)-[:CAN_READ]->(resource2)
MERGE (policy)-[:CAN_WRITE]->(resource2)
MERGE (policy)-[:CAN_CREATE]->(resource2)
MERGE (policy)-[:CAN_DELETE]->(resource2)

MATCH (policy:Policy {name: 'Policy2'})
MATCH (resource:Resource {name: 'meeting_minutes.doc', type: 'protected'})
MERGE (policy)-[:CAN_READ]->(resource)

MATCH (policy:Policy {name: 'Policy2'})
MATCH (resource:Resource {name: 'student_submissions.txt', type: 'protected'})
MERGE (policy)-[:CAN_READ]->(resource)


//policy match to permission and resource for student
MATCH (policy:Policy {name: 'Policy3'})
MATCH (resource:Resource {name: 'my_grades.txt', type: 'restricted'})
MERGE (policy)-[:CAN_READ]->(resource)

WITH policy
MATCH (resource:Resource {name: 'assignments.pdf', type: 'access_controlled'})
MERGE (policy)-[:CAN_READ]->(resource)

WITH policy
MATCH (resource:Resource {name: 'my_submissions.txt', type: 'restricted'})
MERGE (policy)-[:CAN_WRITE]->(resource)

WITH policy
MATCH (resource:Resource)
WHERE resource.type <> 'restricted' AND resource.name <> 'my_grades.txt' AND resource.name <> 'assignments.pdf'
MERGE (policy)-[:CAN_READ]->(resource)



//adding roellke
CREATE (:User {name: 'roellke'})

WITH 1 as _
MATCH (user:User {name: 'roellke'})
MATCH (role:Role)
WHERE role.name IN ['admin', 'professor', 'auditor']
MERGE (user)-[:HAS_ROLE]->(role)

//policy match for auditor
MATCH (policy:Policy {name: 'Policy4'})
MATCH (resource1:Resource {name: 'confidential_report.pdf'})
MERGE (policy)-[:CAN_READ]->(resource1)
MERGE (policy)-[:CAN_WRITE]->(resource1)
MERGE (policy)-[:CAN_DELETE]->(resource1)
MERGE (policy)-[:CAN_CREATE]->(resource1)

MATCH (policy:Policy {name: 'Policy4'})
MATCH (resource2:Resource {name: 'meeting_minutes.doc'})
MERGE (policy)-[:CAN_READ]->(resource2)
MERGE (policy)-[:CAN_WRITE]->(resource2)
MERGE (policy)-[:CAN_DELETE]->(resource2)
MERGE (policy)-[:CAN_CREATE]->(resource2)

MATCH (policy:Policy {name: 'Policy4'})
MATCH (resource3:Resource {name: 'payroll.xls'})
MERGE (policy)-[:CAN_READ]->(resource3)

MATCH (policy:Policy {name: 'Policy4'})
MATCH (resource3:Resource {name: 'payroll.xls'})
MERGE (policy)-[:CAN_WRITE]->(resource3)

//adding employees
MATCH (policy:Policy {name: 'Policy5'})
MATCH (resource:Resource {name: 'my_payroll.xls'})
MERGE (policy)-[:CAN_READ]->(resource)


//role w more than one policy
CREATE (:Role {name: 'manager'})

MATCH (role:Role {name: 'manager'})
MATCH (policy:Policy)
WHERE policy.name IN ['Policy1', 'Policy4']
MERGE (role)-[:HAS_POLICY]->(policy)

CREATE (:User {name: 'wendi'})-[:HAS_ROLE]->(:Role {name: 'manager'})

CREATE (:Role {name: 'manager'})
MATCH (role:Role {name: 'student_employee'})
MATCH (policy:Policy)
WHERE policy.name IN ['Policy3', 'Policy5']
MERGE (role)-[:HAS_POLICY]->(policy)

CREATE (:Role {name: 'dean'})
MATCH (role:Role {name: 'dean'})
MATCH (policy:Policy)
WHERE policy.name IN ['Policy1', 'Policy2', 'Policy4']
MERGE (role)-[:HAS_POLICY]->(policy)
